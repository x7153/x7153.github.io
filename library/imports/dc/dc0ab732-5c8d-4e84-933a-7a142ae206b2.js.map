{"version":3,"sources":["assets\\Script\\node\\VoPrefabImg.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,gCAAoC;AACpC,0CAAyC;AACnC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAiC,+BAAY;IAA7C;;IAiDA,CAAC;IA7CG,oBAAoB;IACpB,2BAAK,GAAL;QACI,IAAI,CAAC,IAAI,EAAE,CAAA;IACf,CAAC;IAED,kBAAkB;IAClB,2BAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAA;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAA;IAClC,CAAC;IAED,0BAAI,GAAJ;QAAA,iBA8BC;QA7BG,IAAI,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACpC,IAAI,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAC5B,IAAI,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QACxB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QAE3C,IAAI,IAAI,GAAG,IAAI,CAAA;QACf,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,gBAAS,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAErE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAE,aAAa,GAAE,KAAK,GAAE,GAAG,EAAE,EAAE,CAAC,WAAW,EAC5D,UAAU,GAAG,EAAE,WAA0B;YACrC,IAAI,UAAU,GAAG,WAAW,CAAC,eAAe,EAAE,CAAA;YAC9C,IAAI,UAAU,CAAC,KAAK,GAAG,GAAG,EAAC;gBACvB,IAAI,GAAG,GAAG,GAAG,GAAC,UAAU,CAAC,KAAK,CAAA;gBAE9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,UAAU,CAAC,KAAK,CAAA;gBAChD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC,MAAM,CAAA;aACrD;YAED,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;QAC3C,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CACvB,EAAE,CAAC,QAAQ,CACP,KAAK,EACL,EAAE,CAAC,QAAQ,CAAC;YACR,iBAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,CAAA;QAAA,CAAC,CACxC,CACJ,CACJ,CAAA;IACL,CAAC;IA9CD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;gDACF;IAFT,WAAW;QADvB,OAAO;OACK,WAAW,CAiDvB;IAAD,kBAAC;CAjDD,AAiDC,CAjDgC,EAAE,CAAC,SAAS,GAiD5C;AAjDY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { SumImgNum } from \"../Main\";\r\nimport { PoolMgr } from \"../mgr/PoolMgr\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class VoPrefabImg extends cc.Component {\r\n    @property(cc.Sprite)\r\n    imgMain:cc.Sprite;\r\n\r\n    // get()获取对象池内对象时会调用\r\n    reuse(){\r\n        this.init()\r\n    }\r\n\r\n    // put() 收回对象池时会调用\r\n    unuse() {\r\n        this.node.scale = 1;\r\n        this.node.setPosition(0, 0);\r\n        this.node.opacity = 255;\r\n        this.imgMain.node.width = 126\r\n        this.imgMain.node.height = 126        \r\n    }    \r\n\r\n    init () {\r\n        let slowMove = cc.moveBy(4, 0, 110);\r\n        let scale = cc.scaleTo(4, 2)\r\n        let fade = cc.fadeOut(5)\r\n        let spawn = cc.spawn(slowMove, scale, fade)\r\n\r\n        let self = this\r\n        let imgId = String(Math.floor(Math.random()*(SumImgNum -1 + 1)) + 1); \r\n\r\n        cc.loader.loadRes( \"imgs/voImg(\"+ imgId +\")\", cc.SpriteFrame,\r\n        function (err, spriteFrame:cc.SpriteFrame) {\r\n            let resImgSize = spriteFrame.getOriginalSize()\r\n            if( resImgSize.width > 126){\r\n                let arg = 126/resImgSize.width\r\n\r\n                self.imgMain.node.width = arg * resImgSize.width\r\n                self.imgMain.node.height = arg * resImgSize.height\r\n            }    \r\n\r\n            self.imgMain.spriteFrame = spriteFrame;\r\n        })    \r\n\r\n        this.imgMain.node.runAction(\r\n            cc.sequence(\r\n                spawn,\r\n                cc.callFunc(()=>{\r\n                    PoolMgr.instance.putVoImg(this.node)}\r\n                )\r\n            )\r\n        )\r\n    }\r\n}\r\n"]}